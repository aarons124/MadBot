const { Client, Message, MessageEmbed, Permissions } = require("discord.js");
const MuteRole = require("../../Database/Models/MuteRoleSchema");

module.exports = {
  name: "setmuterole",
  aliases: ["setmute", "muterole"],
  cooldown: 4,
  category: "Configuracion",

  /**
   * @param {Client} client
   * @param {Message} message
   * @param {String[]} args
   */

  run: async (client, message, args) => {

    try {

      if (!message.member.permissions.has(Permissions.FLAGS.ADMINISTRATOR)) {
        return message.reply({
          embeds: [
            new MessageEmbed()
              .setColor("#5865F2")
              .setDescription(`${client.emotes.error} You need the [\`ADMINISTRATOR\`] permission to use this command.`)
          ]
        }).then(sent => {
          setTimeout(() => {
            sent.delete();
          }, 5000)
        })
      }

      const Role = message.mentions.roles.first() || message.guild.roles.cache.get(args[0]);
      if (!Role) {
        return message.reply({
          embeds: [
            new MessageEmbed()
              .setColor("#5865F2")
              .setDescription(`${client.emotes.error} Please provide a mute role.`)
          ]
        })
      }

      let currentData = await MuteRole.findOne({
        GuildID: message.guild.id
      });

      let newData = new MuteRole({
        GuildID: message.guild.id,
        RoleID: Role.id
      });

      currentData ? await MuteRole.updateOne({
        GuildID: message.guild.id,
        RoleID: Role.id
      }) : await newData.save();

      return message.reply({
        embeds: [
          new MessageEmbed()
            .setColor("#5865F2")
            .setDescription(`${client.emotes.success} The mute role for this server has been set to **${Role}**`)
        ]
      });

    } catch (e) {
      console.log(`[SET_MUTEROLE_COMMAND]: ${e}`);
    }
  }
}